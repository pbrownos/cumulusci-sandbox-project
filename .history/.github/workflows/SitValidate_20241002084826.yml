name: CCI Pipeline Validate to SIT

on:
  pull_request:
    branches:
      - SIT  # Trigger the action when a PR is opened against the SIT branch

jobs:
  SitValidate:
    name: Validate Deployment to SIT (PR Check)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        run: |
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt install -y nodejs
          npm install -g @salesforce/cli

      - name: Install CumulusCI
        run: |
          pip install cumulusci
          pip install --upgrade pyopenssl

      - name: Create JWT Key File
        run: |
          echo "${{ secrets.SF_JWT_KEY_SIT }}" > /tmp/server.key

      - name: Authenticate with Salesforce Org (SIT)
        env:
          SF_CONSUMER_KEY_SIT: ${{ secrets.SF_CONSUMER_KEY_SIT }}
          SF_USERNAME_SIT: ${{ secrets.SF_USERNAME_SIT }}
        run: |
          sf org login jwt --client-id "$SF_CONSUMER_KEY_SIT" \
                           --jwt-key-file /tmp/server.key \
                           --username "$SF_USERNAME_SIT" \
                           --instance-url https://test.salesforce.com \
                           --set-default

      - name: Import SIT Org into CumulusCI
        run: |
          cci org import brownpau@grinnell.edu.ccitestsit sit
        env:
          SFDX_AUTH_URL: $(sf org display --json | jq -r .result.sfdxAuthUrl)

      - name: Validate feature branch in SIT (Check Only)
        run: |
          cci task run dx_push --org sit --command "force:source:deploy -c --sourcepath force-app"
        env:
          CUMULUSCI_KEY: ${{ secrets.CUMULUSCI_KEY }}

      # Setup for Selenium and Robot Framework
      - name: Install dependencies for Robot Framework and Selenium
        run: |
          pip install robotframework
          pip install robotframework-seleniumlibrary
          sudo apt-get install -y unzip xvfb libxi6 libgconf-2-4
          sudo apt-get install -y default-jdk

      - name: Download and setup Chrome browser
        run: |
          sudo apt-get install -y wget
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install

      - name: Download and setup ChromeDriver
        run: |
          # Extract the major Chrome version
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+')
          echo "Detected Chrome major version: $CHROME_VERSION"

          # Fetch the corresponding ChromeDriver version
          DRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")

          # Check if DRIVER_VERSION is not empty
          if [[ -z "$DRIVER_VERSION" ]]; then
            echo "Error: Unable to determine the ChromeDriver version for Chrome version $CHROME_VERSION"
            exit 1
          fi

          echo "Downloading ChromeDriver version: $DRIVER_VERSION"
          wget -N https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip

          # Ensure the zip file was downloaded successfully
          if [[ ! -f chromedriver_linux64.zip ]]; then
            echo "Error: Failed to download ChromeDriver version $DRIVER_VERSION"
            exit 1
          fi

          unzip chromedriver_linux64.zip
          sudo mv -f chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          rm chromedriver_linux64.zip

      - name: Run Robot Framework Tests with Selenium
        run: |
          Xvfb :99 &  # Start virtual display
          export DISPLAY=:99
          robot --outputdir robot/cumulusci-sandbox-project/results/ robot/cumulusci-sandbox-project/tests/
